name: Test with Gradle and Docker Compose

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  test:

    runs-on: ubuntu-latest
    permissions:
      contents: read

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: players
        ports:
          - 3307:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

      mybatis:
        image: mybatis-test-db  # Replace with your MyBatis Docker image and tag
        ports:
          - 8080:8080  # Adjust port if necessary
        options: --health-cmd="curl -s http://localhost:8080/actuator/health || exit 1" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@417ae3ccd767c252f5661f1ace9f835f9654f2b5 # v3.1.0
        with:
          gradle-version: '8.5'

      - name: Build with Gradle 8.5
        run: gradle build

      - name: Execute players-data.sql
        run: |
          mysql -h 127.0.0.1 --port 3307 -u root -pp assword players < $(find ./ -name players-data.sql)

      - name: Wait for MySQL to be ready
        run: |
          dockerize -wait tcp://localhost:3307 -timeout 1m

      - name: Wait for MyBatis to be ready
        run: |
          dockerize -wait tcp://localhost:8080 -timeout 1m

      - name: Run tests
        env:
          SPRING_DATASOURCE_URL: jdbc:mysql://localhost:3307/players?useUnicode=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC
          SPRING_DATASOURCE_USERNAME: players
          SPRING_DATASOURCE_PASSWORD: password
        run: gradle test --info

      - name: Publish Test Report
        uses: mikepenz/action-junit-report@v3
        if: always()
        with:
          report_paths: '**/build/test-results/test/TEST-*.xml'
          job_name: 'Test Report'

